/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csc407groupproject;

import java.util.Random;

/**
 *
 * @author Carlos D Maldonado Lizardo
 */
public class Csc407GroupProject {

    /**
     * @param args the command line arguments
     */
    //1. Initialize array for population
    public static boolean[] popInfected = new boolean[1000];

    //initialise round counter, and infected counter;
    public static int rounds = 2000;
    public static int infectedCounter = 0;
    public static int healthyCounter = 0;

    public static void main(String[] args) {

        //first infected indavidual
        popInfected[1] = true;

        //2. initialize contact variable between 0 and 1. and threashhold for contact
        double contact;
        double contactThreashold = 0.005;
        //2. used for finding random number between 0 and 1
        contact = Math.random();

        //3. Initialize Infection variable between 0 and 1 and threashholt for infection
        double infected;
        double infectedThreashhold = 0.01;
        //3. Used for finding random number between 0 and 1
        infected = Math.random();

        numberInfected();
    }

    //4. Method for outputing and find the number if infected each round for 2000 rounds
    public static void numberInfected() {
        for (int i = 0; i < popInfected.length; i++) {
            if (popInfected[i] == true) {
                infectedCounter++;
            }
        }
        System.out.println(infectedCounter);
    }

    public static boolean[] infectionRounds(double contact, double infectedThreashhold, boolean[] popInfected) {
        //Initialize variable needed
        int contactWith;
        double infect;
        //First loop goes through all 1000 people
        for (int i = 0; i < 1000; i++) {

            //finds the ratio of people needed the person will come into contact with
            contact = Math.random();
            contact = 1000 / contact;

            //checks if the indavidual is infected
            if (popInfected[i] == true) {

                //loop for infected indavidual
                for (int j = 0; j < contact; j++) {
                    //random person to be in contact with
                    contactWith = (int) (Math.random() * 1000) + 0;

                    //checks if the person they come into contact with is infected, if not moves on
                    if (popInfected[contactWith] == false) {
                        //infection chance
                        infect = Math.random();

                        //checks if it meets threashhold
                        if (infect > infectedThreashhold) {
                            popInfected[contactWith] = true;
                        }

                    }
                }
            } else {
                
                //loop for non infected person
                for (int j = 0; j < contact; j++) {
                    //random person they will come into contact with
                    contactWith = (int) (Math.random() * 1000) + 0;

                    //checks if they are infected if not move on
                    if (popInfected[contactWith] == true) {
                        //infection chance
                        infect = Math.random();

                        //checks if it meet threashhold
                        if (infect > infectedThreashhold) {
                            popInfected[contactWith] = true;
                        }

                    }
                }
            }

        }

        //return updated array after 1 round
        return popInfected;
    }
}
